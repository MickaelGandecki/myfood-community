{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","anyHasZIndex","elements","idx","defined","zIndex","hasGradientOverlay","overlay","gradient","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","axisGroupBox","axes","axisBox","contentBox","wrap","clone","Box","paneAnchor","pane","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","filterSeriesByType","types","currentSeries","result","seriesTypes","concat","type","equalsIgnoreCase","a","b","toLowerCase","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","appendIfNotNull","array","element","singleItemOrArray","getDateField","intlService","parseDate","groupSeries","axis","axisIx","grep","s","categoryAxis","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","name","min","range","createDiv","className","closestHandle","hasClasses","stopPropagation","tooltipAlignment","angle","horizontal","vertical","radians","dataviz","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","abs","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","segmentVisible","fields","index","pointVisibility","visible","bindSegments","pointData","points","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","total","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","Y","X","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","getTemplate","TextBox","ShapeElement","getSpacing","limitValue","append","styleValue","CategoryAxis","BoxElement","DateCategoryAxis","elementStyles","bindEvents","services","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","GeometryPoint","transform","ChartAxis","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","ZERO","INTERPOLATE","GAP","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","SERIES_CLICK","SERIES_HOVER","PLOT_AREA_CLICK","PLOT_AREA_HOVER","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","ABOVE","BELOW","LinePoint","LineSegment","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegmentMixin","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","plotArea","_plotArea","visual","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","item","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","ref","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","seriesIx","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","stack","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","valueAxis","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","noteText","dataItem","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","clip","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","reverse","crossingValues","axisCrossingValues","axisIndex","slotX","slotY","callback","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelTemplate","labelText","markers","_rendered","createMarker","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","padding","visualPoints","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","seriesMissingValues","dir","revDir","justified","curveProcessor","segments","curve","CurveProcessor","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","segment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","firstPoint","lastPoint","valueAxisLineBox","lineBox","categoryAxisLineBox","stackPoints","_linePoints","end","createArea","createLine","lineCap","fill","prevSegment","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_outOfRangeMinPoint","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","noclip","textOptions","labelBox","top","bottom","alignToClipBox","start","parentBox","createLabel","customVisual","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","gap","spacing","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","xAxis","yAxisName","yAxis","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","chartContainer","titleOptions","Title","buildTitle","appendAxis","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","panes","paneOptions","panesLength","paneIndex","currentCrosshair","removeCrosshairs","splice","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","redraw","panesArray","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","visible$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","oPoints","cPoints","lhPoints","oSlot","cSlot","fromBox","toBox","createSegments","summary","totalCategories","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","categoryField","aggregateSeries","filterSeries","minCategory","srcCategories","totalRangeIndices","outOfRangePoints","ceil","_outOfRangeMaxPoint","_seriesMax","aggregatorSeries","srcData","outOfRangeMinIdx","outOfRangeMaxIdx","getFn","outOfRangeMinCategory","outOfRangeMaxCategory","aggregator","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","updateAxisOptions","axesOptions","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","leave","_unsetActivePoint","renderChildren","createItems","userAlign","getService","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","_registry","registry","match","observer","_dateAxis","initOptions","createElements","_index","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","direction","leftMask","rightMask","borderLeftWidth","borderRightWidth","_mousewheelHandler","mousewheel","_mousewheel","obj","_domEvents","DomEventsBuilder","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","edge","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","constantAngle","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","reverseValue","second","originalX","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","valueAxisBox","heightDiff","valueRadius","onCircle","_polarAxisCenter","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","slotSector","slotAngle","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initSurface","_initHandlers","bindCategories","FontLoader","preloadFonts","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","resize","force","_resize","_noTransitionsRedraw","_model","findAxisByName","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","chartArea","elementSize","renderAs","Surface","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","originalChartArea","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","_hasSelection","_selections","selections","select","addDuration","weekStartDay","_selectStart","_select","_selectEnd","_clickHandler","_click","_surfaceMouseenterHandler","_mouseover","_surfaceMouseleaveHandler","_mouseout","_mousemove","throttle","removeObserver","requiresHandlers","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","domEvents","cancel","_stopDragEvent","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","_startNavigation","_suppressHover","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","drawingElement","_activePoint","_propagateClick","_startHover","handlingTap","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","_trackCrosshairs","_trackSharedTooltip","pointArgs","hoverArgs","_tooltipCategoryIx","hideElements","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","onAxis","dataLength","dataIx","dataRow","uniqueCategories","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","template","_slotCount","_groupIx","_groupValue","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartPane","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","CHANGE","DATABOUND","LEAVE","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","unbind","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findPaneByName","findPaneByIndex","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","_seriesOptions","on","_mouseleave","relatedTarget","themes","themeName","autoTheme","_initChart","_createChart","_onInit","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","ExportMixin","PDFMixin","plugin","action","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","_clearShowTimeout","remove","sharedTemplate","_offset","css","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_pane","chartsVisual","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":"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ACA4L,GACAC,GACA9N,GACAE,GACAC,GACAC,GACA9B,GACAyP,GACAC,GACAC,GACAC,GACAC,GACAC,GACA9B,GACA+B,GACAlG,GACA9D,GACAiK,GACAC,GACAC,GACA9H,GACAjC,GACAgK,GACAC,GACA1I,GACA2I,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAuBAC,GAkBAC,GA8EA1H,GA+GA2H,GACAC,GACAC,GACAC,GACAC,GA2GAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAaAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GA0EAC,GACAC,GAqGAC,GAMA7U,GA2CA8U,GA6bAC,GAuBAC,GAgBAC,GACAC,GACAC,GAiQAC,GA6CAC,GAuDAC,GAuBAC,GAiEAC,GA4BAC,GAuBAC,GA8EAC,GAqEAC,GAOAC,GAOAC,GA2FAC,GAuGAC,GAwBAC,GAoGAC,GACAC,GAiOAC,GA6BAC,GAsBAC,GA4IAC,GAiMAC,GA2GAC,GAkOAC,GA2EAC,GA0FAC,GAUAC,GAiRAC,GA+DAC,GA2GAC,GAEAC,GAiHAC,GAsGAC,GAiDAC,GAmFAC,GAmGAC,GA8DAC,GA4IA5V,GAWA6V,GA2sBAC,GAQAC,GA2GAC,GAeAC,GAwDAC,GA4CAC,GAmDAC,GAKAC,GAuDAC,GA8HAC,GA2nBAC,GAgFAC,GAkEAC,GAoKAC,GAwCAC,GAqCAC,GAoGAC,GACAC,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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var Y = datavizConstants.Y;\n        var X = datavizConstants.X;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var eventElement = dataviz.eventElement;\n        var getTemplate = dataviz.getTemplate;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var limitValue = dataviz.limitValue;\n        var last = dataviz.last;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var grep = dataviz.grep;\n        var DateCategoryAxis = dataviz.DateCategoryAxis;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var services = dataviz.services;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.noteText = data.fields.noteText;\n                    if (!defined(point.dataItem)) {\n                        point.dataItem = series.data[categoryIx];\n                    }\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !this$1.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                this.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = categories[categoryIx];\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx,\n                        dataItem: outOfRangePoint.item\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var labelText = this.value;\n                    if (labelTemplate) {\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            series: this.series\n                        });\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                }\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function (visualPoints) {\n                var linePoints = this.linePoints.concat(visualPoints || []);\n                var points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var points = this.calculateStepPoints(this.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(this.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var isInterpolate = chart.seriesMissingValues(this.series) === INTERPOLATE;\n                var reverse = categoryAxis.options.reverse;\n                var vertical = categoryAxis.options.vertical;\n                var dir = reverse ? 2 : 1;\n                var revDir = reverse ? 1 : 2;\n                var length = points.length;\n                var result = [];\n                for (var i = 1; i < length; i++) {\n                    var prevPoint = points[i - 1];\n                    var point = points[i];\n                    var prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    var markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new GeometryPoint(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new GeometryPoint(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new GeometryPoint(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new GeometryPoint(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new GeometryPoint(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new GeometryPoint(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegmentMixin = {\n            points: function () {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var stackPoints = this.stackPoints;\n                var points = this._linePoints(stackPoints);\n                var pos = invertAxes ? X : Y;\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!this.stackPoints && points.length > 1) {\n                    var firstPoint = points[0];\n                    var lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new GeometryPoint(end, firstPoint.y));\n                        points.push(new GeometryPoint(end, lastPoint.y));\n                    } else {\n                        points.unshift(new GeometryPoint(firstPoint.x, end));\n                        points.push(new GeometryPoint(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(AreaSegment.prototype, AreaSegmentMixin, { _linePoints: LineSegment.prototype.points });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                StepLineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, AreaSegmentMixin, { _linePoints: StepLineSegment.prototype.points });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                AreaSegment.fn.init.call(this, linePoints, [], currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.isStacked = isStacked;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new geometry.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = [];\n                    for (var idx = prevStrokeSegments.length - 1; idx >= 0; idx--) {\n                        var segment = prevStrokeSegments[idx];\n                        stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                    }\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new geometry.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var chart = this.parent;\n                var prevSegment = this.prevSegment;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var pos = invertAxes ? X : Y;\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    if (labelTemplate) {\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        var ClusterLayout = ChartElement.extend({\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            var label = point.label;\n                            var note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name || '';\n                    var labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var visible = axis.options.visible !== false;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            leftAnchors[paneId] = axis;\n                        }\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            rightAnchors[paneId] = axis;\n                        }\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var visible$1 = axis$1.options.visible !== false;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            topAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            bottomAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref.axes;\n                var panes = ref.panes;\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            if (length > 0) {\n                for (var i = 0; i < length; i++) {\n                    var axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelTemplate = getTemplate(options);\n                var labelText;\n                if (labelTemplate) {\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                range.min = isNumber(categoryAxis.options.min) ? Math.floor(range.min) : 0;\n                if (isNumber(categoryAxis.options.max)) {\n                    range.max = justified ? Math.floor(range.max) + 1 : Math.ceil(range.max);\n                } else {\n                    range.max = series.data.length;\n                }\n                var currentSeries = deepExtend({}, series);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[minCategory],\n                            category: srcCategories[minCategory],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[range.max],\n                            category: srcCategories[range.max],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var this$1 = this;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var ref = categoryAxis.options;\n                var categories = ref.categories;\n                var srcCategories = ref.srcCategories;\n                if (srcCategories === void 0) {\n                    srcCategories = categories;\n                }\n                var dataItems = ref.dataItems;\n                if (dataItems === void 0) {\n                    dataItems = [];\n                }\n                var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                var aggregatorSeries = deepExtend({}, series);\n                var result = deepExtend({}, series);\n                var srcData = series.data;\n                var srcPoints = [];\n                var outOfRangeMinIdx = MIN_VALUE;\n                var outOfRangeMaxIdx = MAX_VALUE;\n                var getFn = getField;\n                var outOfRangeMinCategory, outOfRangeMaxCategory;\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (var i = 0; i < srcData.length; i++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        var categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx === outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx === outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                var aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                for (var i$1 = 0; i$1 < categories.length; i$1++) {\n                    data[i$1] = aggregator.aggregatePoints(srcPoints[i$1], categories[i$1]);\n                    if (srcPoints[i$1]) {\n                        dataItems[i$1] = data[i$1];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = { vertical: !invertAxes };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                this.createMarker();\n                this.createLabel();\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainer();\n                this.createItems();\n            },\n            createContainer: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.container.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    this.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            labels: { margin: { left: 6 } },\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: { cursor: POINTER },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n                this.initOptions();\n                if (this.options.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height,\n                    direction: 'ltr'\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                this._mousewheelHandler = this.options.mousewheel !== false ? this._mousewheel.bind(this) : stopPropagation;\n                var obj;\n                bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var box = categoryAxis.pane.chartsBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: box.width(),\n                    height: box.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: box.x1 + paddingLeft,\n                        top: box.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    var obj;\n                    unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                    this.chartElement.removeChild(this.wrapper);\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var axisOptions = ref.categoryAxis.options;\n                var range = state.range;\n                var target = state.moveTarget;\n                var reverse = axisOptions.reverse;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (axisOptions.categories.length - 1);\n                var offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n                if (!target) {\n                    return;\n                }\n                var leftHandle = hasClasses(target, 'k-left-handle');\n                var rightHandle = hasClasses(target, 'k-right-handle');\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (leftHandle && !reverse || rightHandle && reverse) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (leftHandle && reverse || rightHandle && !reverse) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[Math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var reverse = this.categoryAxis.options.reverse;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var left = reverse ? to : from;\n                var right = reverse ? from : to;\n                var edge = 'x' + (reverse ? 2 : 1);\n                var box = this._slot(left);\n                var leftMaskWidth = round(box[edge] - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(right);\n                var rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        function stopPropagation(e) {\n            e.stopPropagation();\n        }\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({}, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                var labelTemplate = getTemplate(labels);\n                if (labelTemplate) {\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && (labelText || labelText === 0)) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }));\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n                    var text = options.category || '';\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        this.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function bindSegments(series) {\n            var data = series.data;\n            var points = [];\n            var sum = 0;\n            var count = 0;\n            for (var idx = 0; idx < data.length; idx++) {\n                var pointData = SeriesBinder.current.bindPoint(series, idx);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value)) {\n                    pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n                    pointData.value = Math.abs(value);\n                    points.push(pointData);\n                    if (pointData.visible) {\n                        sum += pointData.value;\n                    }\n                    if (value !== 0) {\n                        count++;\n                    }\n                } else {\n                    points.push(null);\n                }\n            }\n            return {\n                total: sum,\n                points: points,\n                count: count\n            };\n        }\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var ref$1 = bindSegments(currentSeries);\n                    var total = ref$1.total;\n                    var points = ref$1.points;\n                    var count = ref$1.count;\n                    var anglePerValue = 360 / total;\n                    var constantAngle = void 0;\n                    if (!isFinite(anglePerValue)) {\n                        constantAngle = 360 / count;\n                    }\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < points.length; i++) {\n                        var pointData = points[i];\n                        if (!pointData) {\n                            continue;\n                        }\n                        var fields = pointData.fields;\n                        var value = pointData.value;\n                        var visible = pointData.visible;\n                        var angle = value !== 0 ? constantAngle || value * anglePerValue : 0;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        callback(pointData.valueFields.value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: fields.category || '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? value / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var paddingBox = box.clone().unpad(padding);\n                var axisBox = paddingBox.clone();\n                axisBox.y2 = axisBox.y1 + Math.min(axisBox.width(), axisBox.height());\n                axisBox.align(paddingBox, Y, CENTER);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new dataviz.CurveProcessor(false);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            points: function () {\n                var ref = this;\n                var polarAxis = ref.parent.plotArea.polarAxis;\n                var stackPoints = ref.stackPoints;\n                var center = polarAxis.box.center();\n                var points = LineSegment.prototype.points.call(this, stackPoints);\n                points.unshift([\n                    center.x,\n                    center.y\n                ]);\n                points.push([\n                    center.x,\n                    center.y\n                ]);\n                return points;\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, null, false, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, [], currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                if (linePoints.length === currentSeries.data.length) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, { clip: false });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            points: function () {\n                return LineSegment.prototype.points.call(this, this.stackPoints);\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                    segment.options.closed = true;\n                } else {\n                    var stackPoints;\n                    if (isStacked && seriesIx > 0 && prevSegment) {\n                        stackPoints = prevSegment.linePoints.slice(0).reverse();\n                    }\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, stackPoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (children[i].sector) {\n                        slotSector.radius = children[i].sector.radius;\n                    }\n                    children[i].reflow(slotSector);\n                    children[i].sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                }\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var ref$1 = bindSegments(series);\n                var total = ref$1.total;\n                var points = ref$1.points;\n                for (var i = 0; i < points.length; i++) {\n                    var pointData = points[i];\n                    if (!pointData) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: pointData.value / total\n                    }, fields, { visible: pointData.visible });\n                    var value = pointData.valueFields.value;\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            dataItem: dataItem,\n                            value: value,\n                            percentage: fields.percentage,\n                            category: fields.category,\n                            series: series\n                        });\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels));\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initSurface();\n                this._initHandlers();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    if (!this$1._destroyed) {\n                        this$1.trigger('init');\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                return {\n                    width: this.element.offsetWidth,\n                    height: this.element.offsetHeight\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var element = ref.element;\n                var size = dataviz.elementSize(element);\n                this._size = null;\n                return deepExtend({\n                    width: Math.floor(size.width) || datavizConstants.DEFAULT_WIDTH,\n                    height: Math.floor(size.height) || datavizConstants.DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _hasSelection: function () {\n                return this._selections && this._selections.length;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var min = 0;\n                        var max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = dataviz.addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var ref = this;\n                var element = ref.element;\n                var surface = ref.surface;\n                surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopDragEvent(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopDragEvent(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopDragEvent(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopDragEvent(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopDragEvent: function () {\n                return this._hasSelection();\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (!this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                return new Point(clientX - offset.left - padding.left, clientY - offset.top - padding.top);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                if (this._activePoint === element) {\n                    this._propagateClick(element, e);\n                } else {\n                    if (!this._startHover(drawingElement, e)) {\n                        this._unsetActivePoint();\n                    }\n                    this._propagateClick(element, e);\n                }\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chartElement = this._drawingChartElement(element, e);\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (this._suppressHover || !highlight || highlight.isHighlighted(chartElement) || this._sharedTooltip()) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(this, e)) {\n                    this._activePoint = point;\n                    var tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point;\n                }\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTrackHandler || this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            seriesPoint.hover(this, e);\n                            this._activePoint = seriesPoint;\n                            var tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._plotArea.hover) {\n                    this._plotArea.hover(this, e);\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.box.containsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            hideElements: function () {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                highlight.hide();\n                tooltip.hide();\n                delete this._tooltipCategoryIx;\n            },\n            _unsetActivePoint: function () {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = {};\n                var items = [];\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([PLOT_AREA_HOVER]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                var obj$1;\n                unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                this._destroyView();\n                if (this.surface) {\n                    this.surface.destroy();\n                    this.surface = null;\n                }\n                this._clearRedrawTimeout();\n            },\n            _destroyView: function () {\n                var ref = this;\n                var model = ref._model;\n                var selections = ref._selections;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                this._unsetActivePoint();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                var fieldValue = options[field];\n                var originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    var nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isObject(fieldValue)) {\n                        if (isObject(originalValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPlotArea: ChartPlotArea,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: areNumbers,\n            areNumbers: areNumbers,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            singleItemOrArray: singleItemOrArray\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender',\n                init: '_onInit'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                axisDefaults: {},\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements();\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName === 'sass' || themeName === 'default-v2' || themeName === 'bootstrap-v4') {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this\n                });\n            },\n            _onInit: function (e) {\n                this._instance = e.sender;\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                    var visible = pointVisibility[pointIndex];\n                    pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, this.options.tooltip);\n            },\n            _tooltipleave: function () {\n                var chart = this._instance, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                this._redraw();\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            'exportVisual',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip k-chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                this.anchor = e.anchor;\n                this.element.css(e.style);\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.html(content);\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}